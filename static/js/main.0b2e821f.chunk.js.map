{"version":3,"sources":["components/Editor/TextEditor.js","components/App.js","index.js"],"names":["styleMap","UNDERLINE","textDecoration","ITALIC","color","TextEditor","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","saveContent","content","window","localStorage","setItem","JSON","stringify","convertToRaw","handleKeyCommand","bind","assertThisInitialized","toggleBlockType","toggleInlineStyle","state","editorState","EditorState","createEmpty","getItem","createWithContent","convertFromRaw","parse","onChange","contentState","getCurrentContent","setState","setDomEditorRef","ref","domEditor","focus","command","newState","RichUtils","blockType","style","react_default","a","createElement","id","className","Draft","customStyleMap","React","Component","App","Editor_TextEditor","ReactDOM","render","components_App","document","getElementById"],"mappings":"oNAGMA,EAAW,CACfC,UAAa,CACXC,eAAgB,mCAElBC,OAAU,CACRC,MAAO,mBAkFIC,cA5Eb,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAqDRQ,YAAc,SAACC,GACbC,OAAOC,aAAaC,QAAQ,UAAWC,KAAKC,UAAUC,uBAAaN,MArDnER,EAAKe,iBAAmBf,EAAKe,iBAAiBC,KAAtBf,OAAAgB,EAAA,EAAAhB,CAAAD,IACxBA,EAAKkB,gBAAkBlB,EAAKkB,gBAAgBF,KAArBf,OAAAgB,EAAA,EAAAhB,CAAAD,IACvBA,EAAKmB,kBAAoBnB,EAAKmB,kBAAkBH,KAAvBf,OAAAgB,EAAA,EAAAhB,CAAAD,IAEzBA,EAAKoB,MAAQ,CAACC,YAAaC,cAAYC,eACvC,IAAMf,EAAUC,OAAOC,aAAac,QAAQ,WAP3B,OASjBxB,EAAKoB,MAAMC,YAAcC,cAAYG,kBACnCC,yBAAed,KAAKe,MAAMnB,KAG5BR,EAAK4B,SAAW,SAAAP,GACd,IAAMQ,EAAeR,EAAYS,oBACjC9B,EAAKO,YAAYsB,GACjB7B,EAAK+B,SAAS,CAACV,iBAGjBrB,EAAKgC,gBAAkB,SAAAC,GAAG,OAAIjC,EAAKkC,UAAYD,GAnB9BjC,mFAuBjBG,KAAK+B,UAAUC,iDAGAC,GACf,IAAMC,EAAWC,YAAUvB,iBACzBZ,KAAKiB,MAAMC,YACXe,GAEF,OAAIC,GACFlC,KAAKyB,SAASS,GACP,WAEF,sDAGOE,GACdpC,KAAKyB,SACHU,YAAUpB,gBACRf,KAAKiB,MAAMC,YAAakB,8CAKZC,GAChBrC,KAAKyB,SACHU,YAAUnB,kBACRhB,KAAKiB,MAAMC,YAAamB,qCAW5B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,oBACNH,EAAAC,EAAAC,cAAA,QAAME,UAAU,UACdJ,EAAAC,EAAAC,cAACG,EAAA,OAAD,CACIzB,YAAalB,KAAKiB,MAAMC,YACxB0B,eAAgBtD,EAChBsB,iBAAkBZ,KAAKY,iBACvBa,SAAUzB,KAAKyB,SACfK,IAAK9B,KAAK6B,2BAtECgB,IAAMC,WCGhBC,mLARX,OACET,EAAAC,EAAAC,cAAA,OAAKC,GAAG,OACNH,EAAAC,EAAAC,cAACQ,EAAD,cANUH,IAAMC,gCCKxBG,IAASC,OAAOZ,EAAAC,EAAAC,cAACW,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0b2e821f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Editor, EditorState, RichUtils, convertToRaw, convertFromRaw } from 'draft-js';\r\n\r\nconst styleMap = {\r\n  'UNDERLINE': {\r\n    textDecoration: 'underline dashed var(--primary)',\r\n  },\r\n  'ITALIC': {\r\n    color: 'var(--primary)'\r\n  }\r\n};\r\n\r\nclass TextEditor extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleKeyCommand = this.handleKeyCommand.bind(this);\r\n    this.toggleBlockType = this.toggleBlockType.bind(this);\r\n    this.toggleInlineStyle = this.toggleInlineStyle.bind(this);\r\n\r\n    this.state = {editorState: EditorState.createEmpty()};\r\n    const content = window.localStorage.getItem('content');\r\n\r\n    this.state.editorState = EditorState.createWithContent(\r\n      convertFromRaw(JSON.parse(content))\r\n    );      \r\n \r\n    this.onChange = editorState => { \r\n      const contentState = editorState.getCurrentContent();\r\n      this.saveContent(contentState);\r\n      this.setState({editorState}); \r\n    };\r\n\r\n    this.setDomEditorRef = ref => this.domEditor = ref;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.domEditor.focus();\r\n  }\r\n\r\n  handleKeyCommand(command) {\r\n    const newState = RichUtils.handleKeyCommand(\r\n      this.state.editorState,\r\n      command\r\n    );\r\n    if (newState) {\r\n      this.onChange(newState);\r\n      return 'handled';\r\n    }\r\n    return 'not-handled';\r\n  }\r\n\r\n  toggleBlockType(blockType) {\r\n    this.onChange(\r\n      RichUtils.toggleBlockType(\r\n        this.state.editorState, blockType\r\n      )\r\n    );\r\n  }\r\n\r\n  toggleInlineStyle(style) {\r\n    this.onChange(\r\n      RichUtils.toggleInlineStyle(\r\n        this.state.editorState, style\r\n      )\r\n    );\r\n  }\r\n\r\n  saveContent = (content) => {\r\n    window.localStorage.setItem('content', JSON.stringify(convertToRaw(content)));\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id=\"editor-container\">\r\n        <main className=\"editor\">\r\n          <Editor \r\n              editorState={this.state.editorState}\r\n              customStyleMap={styleMap}\r\n              handleKeyCommand={this.handleKeyCommand}\r\n              onChange={this.onChange}\r\n              ref={this.setDomEditorRef}\r\n            />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextEditor;","import React from 'react';\r\nimport TextEditor from './Editor/TextEditor';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div id=\"app\">\r\n        <TextEditor />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles/styles.scss';\nimport 'normalize.css/normalize.css';\nimport \"draft-js/dist/Draft.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}